/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type {ColumnType} from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export interface _CfMETADATA {
  key: Generated<number | null>;
  value: Buffer | null;
}

export interface D1Migrations {
  applied_at: Generated<string>;
  id: Generated<number | null>;
  name: string | null;
}

export interface Family {
  created_at: Generated<string>;
  created_by: string | null;
  id: string;
  name: string;
  updated_at: Generated<string>;
  updated_by: string | null;
}

export interface User {
  body: string | null;
  born_at: string | null;
  clerk_id: string | null;
  created_at: Generated<string>;
  created_by: string | null;
  culture: string | null;
  email: string | null;
  food: string | null;
  gender: string;
  id: string;
  interests: string | null;
  name: string;
  note: string | null;
  personality: string | null;
  updated_at: Generated<string>;
  updated_by: string | null;
}

export interface UserToFamily {
  created_at: Generated<string>;
  created_by: string | null;
  family_id: string;
  id: string;
  role: string;
  updated_at: Generated<string>;
  updated_by: string | null;
  user_id: string;
}

export interface DB {
  _cf_METADATA: _CfMETADATA;
  d1_migrations: D1Migrations;
  family: Family;
  user: User;
  user_to_family: UserToFamily;
}
